1_array-map:-
const numbers = [1, 2, 3, 4, 5]
// Using map() method to create a new array by doubling each number
const doubledNumbers = numbers.map((number) => number * 2)


array-join:-
const elements = ['🥝', '🍓', '🍋']
console.log(elements.join())
// expected output: "🥝,🍓,🍋"
console.log(elements.join('-'))
// expected output: "🥝-🍓-🍋"

02_array-includes
const elements = ['🥝', '🍓', '🍋']
console.log(elements.includes('🍓'))
// Does the array include the 🍓?
// expected output: true

03_array-merge_destructuring
const array1 = ['a', 'b', 'c']
const array2 = ['d', 'e', 'f']
console.dir([...array1, ...array2])
// [ 'a', 'b', 'c', 'd', 'e', 'f' ]
const array3 = ['g', 'h']
console.dir([...array1, ...array2, ...array3])
console.dir([...array3, ...array2, ...array1])

04_array-concat:-
const array1 = ['a', 'b', 'c']
const array2 = ['d', 'e', 'f']
console.dir(array1.concat(array2))
const array3 = ['g', 'h']
console.dir(array1.concat(array2, array3))
//
console.dir([].concat(array1, array2, array3))
console.dir(array1 + array2 + array3)

06_array-filter:-
const numbers = [3, 75, 42, 13, 69]
const resultNumbers = numbers.filter((number) => number >= 50)
console.dir(resultNumbers)
// output: Array [ 75, 69 ]

const elements = [
  { product: 'Desk', price: 200, active: true },
  { product: 'Chair', price: 100, active: true },
  { product: 'Door', price: 300, active: false },
  { product: 'Bookcase', price: 150, active: true },
  { product: 'Door', price: 100, active: true },
]
const resultElements = elements.filter((element) => element.price >= 150)
console.dir(resultElements)
/*
output:
Array [
  { product: 'Desk', price: 200, active: true },
  { product: 'Door', price: 300, active: false },
  { product: 'Bookcase', price: 150, active: true }
]
*/
const resultActiveElements = elements.filter(
  (element) => element.active && element.price >= 150
)
console.dir(resultActiveElements)
/*
output:
Array [
  { product: 'Desk', price: 200, active: true },
  { product: 'Bookcase', price: 150, active: true }
]
*/
